---
- hosts: localhost
  gather_facts: false
  vars:
    image: "flatcar"
    kubernetes_cluster_name: "test1"
    kubernetes_cluster_network: "mafiarpg-default"
    kubernetes_cluster_floating_ip_network: "provider"
    kubernetes_node_keypairs: []
    kubernetes_master_count: 1
    kubernetes_master_flavor_name: "m1.large"
    kubernetes_master_hosts: []
    kubernetes_node_count: 1
    kubernetes_node_flavor_name: "m1.medium"
    kubernetes_node_hosts: []
    os_config_file_path: "{{ lookup('env', 'OS_CLIENT_CONFIG_FILE') }}"
    awx_address: "http://localhost"
  tasks:
    - name: Check if OpenStack credentials exist
      stat:
        path: "{{ os_config_file_path }}"
      register: os_config_file
    - name: Include OpenStack credentials as variables
      include_vars: "{{ os_config_file_path }}"
      when: os_config_file.stat.exists and os_config_file.stat.isreg
    - name: Generate AWX token
      awx.awx.tower_token:
        description: "AWX Token for further API calls for cluster {{ kubernetes_cluster_name }}"
        application: Kansible
        tower_host: "{{ awx_address }}"
        tower_username: "{{ awx_username }}"
        tower_password: "{{ awx_password }}"
    - name: Generate nodes keypair
      openstack.cloud.keypair:
        name: "{{ (kubernetes_cluster_name + '-keypair') }}"
        auth: "{{ clouds.devstack.auth }}"
      register: nova_keypair
    - name: Create nodes credential
      awx.awx.tower_credential:
        name: "{{ (kubernetes_cluster_name + '-node-keypair') | to_uuid }}"
        description: "{{ kubernetes_cluster_name + ' Node SSH Credential' }}"
        organization: MafiaRPG
        kind: ssh
        inputs:
          username: core
          ssh_key_data: "{{ nova_keypair.key.private_key }}"
        tower_host: "{{ awx_address }}"
        tower_oauthtoken: "{{ tower_token }}"
    - name: Generate list of keypairs
      set_fact:
        kubernetes_node_keypairs: "{{ kubernetes_node_keypairs + [item.public_key] }}"
      with_items:
        - "{{ nova_keypair.key }}"
        - "{{ ssh_keypair }}"
    - name: Create cluster inventory
      awx.awx.tower_inventory:
        name: "{{ (kubernetes_cluster_name + '-inventory') | to_uuid }}"
        description: "{{ kubernetes_cluster_name + ' cluster inventory' }}"
        organization: MafiaRPG
        tower_host: "{{ awx_address }}"
        tower_oauthtoken: "{{ tower_token }}"
    - name: Create OpenStack source
      awx.awx.tower_inventory_source:
        name: "{{ (kubernetes_cluster_name + '-openstack') | to_uuid }}"
        description: "{{ kubernetes_cluster_name + ' cluster OpenStack inventory source' }}"
        inventory: "{{ (kubernetes_cluster_name + '-inventory') | to_uuid }}"
        source: openstack
        credential: MafiaRPG OpenStack
        tower_host: "{{ awx_address }}"
        tower_oauthtoken: "{{ tower_token }}"
    - block:
        - name: Create master provision job template
          awx.awx.tower_job_template:
            name: "{{ (kubernetes_cluster_name + '-master-deploy') | to_uuid }}"
            description: "{{ kubernetes_cluster_name + ' cluster master deploy job' }}"
            project: KubeSpray
            playbook: cluster.yml
            inventory: "{{ (kubernetes_cluster_name + '-inventory') | to_uuid }}"
            credentials:
              - "{{ (kubernetes_cluster_name + '-node-keypair') | to_uuid }}"
            host_config_key: "{{ callback_key }}"
            tower_host: "{{ awx_address }}"
            tower_oauthtoken: "{{ tower_token }}"
          register: job_template_reg
        - name: debug job template
          debug:
            msg: "Job template create result: {{ job_template_reg }}"
        - name: Generate Kubernetes node user-data
          set_fact:
            userdata: "{{ lookup('template', 'userdata/flatcar.j2') }}"
        - name: Create Kubernetes master data volume
          openstack.cloud.volume:
            name: "{{ (kubernetes_cluster_name + '-master' + item + '-volume') | to_uuid }}"
            description: "{{ kubernetes_cluster_name + ' cluster master' + item + ' data volume' }}"
            state: present
            auth: "{{ clouds.devstack.auth }}"
            size: "{{ kubernetes_master_volume_size | default('40') }}"
          with_sequence: start=1 end="{{ kubernetes_master_count + 1 }}"
        - name: Create Kubernetes master instance
          openstack.cloud.server:
            name: "{{ kubernetes_cluster_name + '-kubernetes-master' + item }}"
            state: present
            auth: "{{ clouds.devstack.auth }}"
            flavor: "{{ kubernetes_master_flavor_name }}"
            image: "{{ image }}"
            network: "{{ kubernetes_cluster_network }}"
            floating_ip_pools:
              - "{{ kubernetes_cluster_floating_ip_network }}"
            security_groups:
              - default
              - Kubernetes Master
            volumes:
              - "{{ (kubernetes_cluster_name + '-master' + item + '-volume') | to_uuid }}"
            userdata: "{{ userdata | to_json }}"
          with_sequence: start=1 end="{{ kubernetes_master_count + 1 }}"
      vars:
        callback_key: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
    - name: Provision Kubernetes nodes
      block:
        - name: Create Kubernetes node data volume
          openstack.cloud.volume:
            name: "{{ kubernetes_cluster_name + '-node' + item + '-volume' | to_uuid }}"
            description: "{{ kubernetes_cluster_name + ' cluster node' + item + ' data volume' }}"
            state: present
            auth: "{{ clouds.devstack.auth }}"
            size: "{{ kubernetes_node_volume_size | default('40') }}"
          with_sequence: start=1 end="{{ kubernetes_node_count + 1 }}"
        - name: Create Kubernetes node instance
          openstack.cloud.server:
            name: "{{ kubernetes_cluster_name + '-kubernetes-node' + item }}"
            state: present
            auth: "{{ clouds.devstack.auth }}"
            flavor: "{{ kubernetes_worker_flavor_name }}"
            image: "{{ image }}"
            network: "{{ kubernetes_cluster_network }}"
            floating_ip_pools:
              - "{{ kubernetes_cluster_floating_ip_network }}"
            security_groups:
              - default
              - Kubernetes Node
            volumes:
              - "{{ kubernetes_cluster_name + '-node' + item + '-volume' | to_uuid }}"
            userdata: "{{ kubernetes_node_userdata | to_json }}"
          with_sequence: start=1 end="{{ kubernetes_node_count + 1 }}"
        - name: Add instance to list
          set_fact:
            kubernetes_node_hosts: "{{ kubernetes_node_hosts + (kubernetes_cluster_name + '-kubernetes-node' + item) }}"
          with_sequence: start=1 end="{{ kubernetes_node_count + 1 }}"
