---
- hosts: localhost
  gather_facts: false
  vars:
    image: "flatcar"
    kubernetes_cluster_name: "test1"
    kubernetes_cluster_network: "mafiarpg-default"
    kubernetes_cluster_floating_ip_network: "provider"
    kubernetes_node_keypairs: []
    kubernetes_master_flavor_name: "m1.large"
    kubernetes_master_volume_name: "{{ (kubernetes_cluster_name + '-master-volume') | to_uuid }}"
    os_config_file_path: "{{ lookup('env', 'OS_CLIENT_CONFIG_FILE') }}"
  tasks:
    - stat:
        path: "{{ os_config_file_path }}"
      register: os_config_file
    - include_vars: "{{ os_config_file_path }}"
      when: os_config_file.stat.exists and os_config_file.stat.isreg
    - name: Generate nodes keypair
      openstack.cloud.keypair:
        name: "{{ (kubernetes_cluster_name + '-keypair') }}"
        auth: "{{ clouds.devstack.auth }}"
      register: generated_keypair
    - name: Create nodes credential
      awx.awx.tower_credential:
        name: "{{ kubernetes_cluster_name + '-node-keypair' | to_uuid }}"
        description: "{{ kubernetes_cluster_name + 'Node SSH Credential' }}"
        organization: MafiaRPG
        kind: ssh
        inputs:
          username: core
          ssh_key_data: "{{ generated_keypair.key.private_key }}"
    - name: Generate list of keypairs
      set_fact:
        kubernetes_node_keypairs: "{{ kubernetes_node_keypairs + [item.public_key] }}"
      with_items:
        - "{{ generated_keypair.key }}"
        - "{{ ssh_keypair }}"
    - name: Create cluster inventory
      awx.awx.tower_inventory:
        name: "{{ kubernetes_cluster_name + '-inventory' | to_uuid }}"
        description: "{{ kubernetes_cluster_name + ' cluster inventory' }}"
    - name: Create OpenStack source
      awx.awx.tower_inventory_source:
        name: "{{ kubernetes_cluster_name + '-openstack' | to_uuid }}"
        description: "{{ kubernetes_cluster_name + ' cluster OpenStack inventory source' }}"
        inventory: "{{ kubernetes_cluster_name + '-inventory' | to_uuid }}"
        source: openstack
        credential: MafiaRPG OpenStack
    - name: Create KubeSpray job template
      awx.awx.tower_job_template:
        name: "{{ kubernetes_cluster_name + '-kubespray' | to_uuid }}"
        description: "{{ kubernetes_cluster_name + ' cluster KubeSpray job template' }}"
        project: KubeSpray
        playbook: cluster.yml
        inventory: "{{ kubernetes_cluster_name + '-inventory' | to_uuid }}"
        credentials:
          - "{{ kubernetes_cluster_name + '-node-keypair' | to_uuid }}"
        host_config_key: "{{ lookup('password', '/dev/null chars=ascii_letters,digits') }}"
    - name: Generate Kubernetes node user-data
      set_fact:
        kubernetes_node_userdata: "{{ lookup('template', 'userdata/flatcar.j2') }}"
    - name: Provision Kubernetes master node
      block:
        -
    - name: provision kubernetes master volume
      openstack.cloud.volume:
        name: "{{ kubernetes_master_volume_name }}"
        state: present
        auth: "{{ clouds.devstack.auth }}"
        size: "{{ kubernetes_master_volume_size | default('40') }}"

    - name: provision kubernetes master node
      openstack.cloud.server:
        name: "{{ (kubernetes_cluster_name + '-kubernetes-master') }}"
        state: present
        auth: "{{ clouds.devstack.auth }}"
        flavor: "{{ kubernetes_master_flavor_name }}"
        image: "{{ image }}"
        network: "{{ kubernetes_cluster_network }}"
        floating_ip_pools:
          - "{{ kubernetes_cluster_floating_ip_network }}"
        volumes:
          - "{{ kubernetes_master_volume_name }}"
        userdata: "{{ kubernetes_node_userdata | to_json }}"
